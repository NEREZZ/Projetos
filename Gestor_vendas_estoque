
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>
#include <locale.h>
#include <stdbool.h>
#define MAX_VENDAS 100
#define MAX_PRODUTOS 100
#define MAX_NOME 100

struct Produto
{
    int id;
    char nome[MAX_NOME];
    int quantidade; //Em estoque
};


struct Vendas
{
    int id;
    int nome;
    float valorVenda;
    int qtdVendido;
    int quantidadeVenda;
    int fio;
    float valor_fio;
    float largura;
    float altura;
};


struct Produto estoqueProdutos[MAX_PRODUTOS];
struct Vendas vendasRealizadas[MAX_VENDAS];




void salvaProdutoArquivo()
{
    int i = 0, n = 0,k=1;
    int id=0;
    FILE *estoq;
    estoq = fopen("C:\\RelatoriosvendasRealizadas\\estoque.txt", "a");
    if (estoq == NULL)
    {
        printf("Erro ao abrir o arquivo.\n");
        return 1;
    }

    do
    {

        printf("Digite o id do produto: ");
        scanf("%d",&id);
        if(id<=0)
        {
            printf("ID INVALIDO! TENTE NOVAMENTE\n");
            salvaProdutoArquivo();
        }
      
        fprintf(estoq, "\nID: %d |",id);
    
        i++;
        fclose(estoq);
        cadastrarproduto();
    } while (i == 0);
}
void cadastrarproduto()
{
    FILE *estoq;
    char word = 0;
    int i = 0;

    estoq = fopen("C:\\RelatoriosvendasRealizadas\\estoque.txt", "a");
    if (estoq == NULL)
    {
        printf("Erro ao abrir o arquivo.\n");
        return 1;
    }

    do
    {

        printf("Digite o nome do produto: ");
        scanf("%s", &estoqueProdutos[i].nome);
        while ((estoqueProdutos[i].nome >= 'a' || estoqueProdutos[i].nome <= 'z' || estoqueProdutos[i].nome >= 'A' || estoqueProdutos[i].nome <= 'Z') == false)
        {
            printf("NOME INVALIDO! TENTE NOVAMENTE\n");
            break;
        }

        word = strlen(estoqueProdutos[i].nome);

        if (word > 17)
        {
            printf("digite um nome com maximo 17 carcteres! \n");
            return cadastrarproduto();
        }
        else
        {
            fprintf(estoq, "PRODUTO: %s", estoqueProdutos[i].nome);
            for (word; word <= 17; word++)
            {
                fprintf(estoq, " ");
            }
        }
        i++;
        fclose(estoq);
        cadastrar_quantidade_preco();
    } while (i == 0);
}
void cadastrar_quantidade_preco()
{

    char c = 1, word = 0;
    int i = 0, cond = 0,quantidade;
    FILE *estoq;
    estoq = fopen("C:\\RelatoriosvendasRealizadas\\estoque.txt", "a");
    if (estoq == NULL)
    {
        printf("Erro ao abrir o arquivo.\n");
        return 1;
    }
    do
    {

        printf("Digite a quantidade: ");
        scanf("%d", &quantidade);

       

        fprintf(estoq, "| QUANTIDADE: %d\n",quantidade);
        printf("PRODUTO CADASTRADO! DIGITE 0 PARA SALVAR OU 1 PARA CONTINUAR CADASTRANDO!\n");
        scanf("%d", &cond);
        if (cond == 0)
        {
            fclose(estoq);
            printf("SALVO COM SUCESSO!\n");
            break;
            return 0;
        }
        else
        {
            salvaProdutoArquivo();
        }
    } while (i == 0);
}
void realizar_venda()
{
    int i = 1, v, sobrou = 0, valor = 0,valor_id=0,qtdVendido;
    int id=0;
    float valorVenda;
    FILE *vendi;
    vendi = fopen("C:\\RelatoriosvendasRealizadas\\vendas.txt", "a");
   
    if (vendi == NULL)
    {
        printf("Erro ao abrir o arquivo.\n");
        return 1;
    }

    printf("Digite o id do produto: ");
    scanf("%d", &id);
    fprintf(vendi, "ID: %d |", id);
        

    printf("Digite a quantidade: ");
    scanf("%d", &qtdVendido);

    printf("Qual valor da venda:R$ ");
    scanf("%f", &valorVenda);
    if(valorVenda<=0)
    {
        printf("ID INVALIDO! TENTE NOVAMENTE");
        return 0;

    }
        
    fprintf(vendi, "VALOR: %.1f", valorVenda);
    fprintf(vendi, "| QUANTIDADE: %d ",qtdVendido);
    return main();
}

void venda_tela()
{
    float result = 0,altura=0,largura;
    int i = 1,valor_tela=0,word,fio,valor_fio=0,valor_altura,valor_largura;
    char nome;
    FILE *tela;
    tela = fopen("C:\\RelatoriosvendasRealizadas\\vendas_tela.txt", "a");
    while (i != 0)
    {
        printf("Digite o tipo de tela: ");
        scanf("%s", &nome);
       word = strlen(nome);

        if (word > 17)
        {
            printf("digite um nome com maximo 17 carcteres! \n");
            return venda_tela();
        }
        else
        {
            fprintf(tela, "PRODUTO: %s", nome);
            for (word; word <= 17; word++)
            {
                fprintf(tela, " ");
            }
        }
        printf("Digite qual FIO: ");
        scanf("%d", &fio);
        
        fprintf(tela, "FIO: %d", fio);
        
        printf("Digite o valor do fio: ");
        scanf("%f", &valor_fio);
        
        fprintf(tela, "VALOR DO FIO: %.1f", valor_fio);
        
        printf("Digite a altura: ");
        scanf("%f", &altura);
        
        fprintf(tela, "ALTURA: %.1f", altura);
         
        printf("Digite a largura: ");
        scanf("%f", &largura);
        
        fprintf(tela, "LARGURA: %.1f", altura);
       

        result = valor_fio * altura * largura;
        fprintf(tela,"| TOTAL: R$%.1f\n", result);
        fclose(tela);
        i++;
    }
}
void simula()
{
    int i = 1,fio;
    float result = 0,altura,largura,valor_fio;
    char nome = 0;
    while (i >= 0)
    {
        printf("Digite o tipo de tela: ");
        scanf("%s", &nome);
        printf("Digite qual FIO: ");
        scanf("%d", &fio);
        printf("Digite o valor do fio: ");
        scanf("%f", &valor_fio);
        printf("Digite a altura: ");
        scanf("%f", &altura);
        printf("Digite a largura: ");
        scanf("%f", &largura);

        result = valor_fio * altura * largura;
        fprintf("FIO: %d | VALOR DO FIO: %.1f | ALTURA: %.1f | LARGURA: %.1f | TOTAL: R$%.1f\n", nome, valor_fio, altura, largura, result);
    }
}

int main()
{
    int op;
    // diretorio       //seguran√ßa
    if (CreateDirectory("C:\\RelatoriosvendasRealizadas", NULL))
    {
        printf("Arquivo criado com sucesso\n");
    }

    printf("Escolha uma opcao: \n [1] Adicionar um produto \n [2] Realizar uma venda\n [3] Realizar uma venda de tela\n [4] Simular venda de tela\n [0] Sair/Salvar: ");
    scanf("%d", &op);

    if (op == 1)
    {
        salvaProdutoArquivo();
    }
    else if (op == 2)
    {
        realizar_venda();
    }
   else if (op == 3)
    {
        venda_tela();
    }
   else if (op == 4)
    {
        simula();
    }
    else if(op == 0)
    {
        printf("SALVO COM SUCESSO!\n");
        return 0;
    }
    else
    {
        printf("OPCAO INVALIDA!\n");
    }
    return 0;
}
